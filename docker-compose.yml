version: '3'
services:
    cassandra:
      build:
        context: app-config/cassandra/
        dockerfile: Dockerfile
        args:
          IMAGE_VERSION: "3.11.2"
      environment:
        HEAP_NEWSIZE: "32M"
        MAX_HEAP_SIZE: "2048M"
      healthcheck:
        test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
        interval: 30s
        timeout: 10s
        retries: 5
      # ports:
      #   - "9042:9042"
      volumes:
        - ./app-data/cassandra/data:/var/lib/cassandra
        - ./app-data/cassandra/logs:/var/log/cassandra

    postgres:
      image: postgres:10-alpine
      environment:
        POSTGRES_USER: "kinetictask_user"
        POSTGRES_PASSWORD: "K!netic1"
        PGPASSWORD: "K!netic1"
        POSTGRES_DB: "TASK_DATABASE"
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 30s
        timeout: 10s
        retries: 5
      # ports:
      #   - "5432:5432"
      volumes:
        - ./app-data/postgres/data:/var/lib/postgresql/data
        - ./app-config/postgres/init-scripts:/docker-entrypoint-initdb.d

    nginx:
      image: nginx:alpine
      restart: always
      command: /bin/sh -c "envsubst '$$HOST_PORT' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
      healthcheck:
        test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost/health || exit 1"]
        interval: 30s
        timeout: 10s
        retries: 3
      environment:
        # If changing host port, make sure to change in ports mapping below, and
        # in the following values:
          # provisioner.environment.TASK_OAUTH_ENDPOINT_SERVER
          # provisioner.environment.TASK_OAUTH_REDIRECT_ENDPOINT_SERVER
        HOST_PORT: "8080"
      ports:
        - "8080:80"
      volumes:
        - ./app-config/nginx/default.template:/etc/nginx/conf.d/default.template
        - ./app-data/nginx/logs:/var/log/nginx

    configuration:
      image: openjdk:alpine
      command: java -Xmx256m -jar /docker-configuration.jar
      depends_on:
        - cassandra
      volumes:
        - ./app-config/docker-configuration/target/docker-configuration-1.0.0-SNAPSHOT.jar:/docker-configuration.jar

    provisioner:
      build:
        context: app-config/docker-provisioner/
        dockerfile: Dockerfile
        args:
          IMAGE_VERSION: "9.1.9.0-jdk-alpine"
      command: 'wait-until-ready.sh configuration 8181 setup.sh'
      depends_on:
        - "request-ce"
        - task
        - bridgehub
        - filehub
      environment:
        JAVAXMX: "256m"
        SPACE_NAME: "Playground"
        SPACE_SLUG: "playground"
        IMPORT_OVERWRITE: "false"
        IMPORT_TYPE: "all"
        TASK_OAUTH_ENDPOINT_SERVER: "http://localhost:8080/kinetic"
        TASK_OAUTH_REDIRECT_ENDPOINT_SERVER: "http://localhost:8080/kinetic-task"
        # SDK log level (off | info | debug | trace)
        SDK_LOG_LEVEL: "trace"

    task:
      build:
        context: app-config/kinetic-task/
        dockerfile: Dockerfile
        args:
          IMAGE_VERSION: "8.5-jre8-alpine"
          VERSION: "4.2.2"
      command: 'wait-for-port.sh postgres 5432 setup.sh'
      depends_on:
        - postgres
      environment:
        JAVA_OPTS: "-Xmx768m -Dcom.kineticdata.task.dataDirectory=/home/dataDirectory"
      healthcheck:
        test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:8080/kinetic-task/app/login || exit 1"]
        interval: 90s
        timeout: 10s
        retries: 3
      volumes:
        - ./app-config/kinetic-task/postgres.properties:/home/dataDirectory/config/adapter.properties
        - ./app-data/kinetic-task/data:/home/dataDirectory

    request-ce:
      build:
        context: './app-config/'
        dockerfile: './kinetic-request-ce/Dockerfile'
        args:
          IMAGE_VERSION: "8.5-jre8-alpine"
          VERSION: "2.0.4"
      command: '/wait-for-port-to-close.sh configuration 8181 catalina.sh run'
      depends_on:
        - cassandra
      environment:
        JAVA_OPTS: "-Xmx512m -Dcom.kineticdata.core.dataDirectory=/home/dataDirectory"
      healthcheck:
        test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:8080/kinetic/app || exit 1"]
        interval: 90s
        timeout: 10s
        retries: 3
      volumes:
        - ./app-data/kinetic-request-ce/logs:/home/dataDirectory/logs

    bridgehub:
      build:
        context: './app-config/'
        dockerfile: './kinetic-bridgehub/Dockerfile'
        args:
          IMAGE_VERSION: "8.5-jre8-alpine"
          VERSION: "1.2.0"
      command: '/wait-for-port-to-close.sh configuration 8181 catalina.sh run'
      depends_on:
        - cassandra
      environment:
        JAVA_OPTS: "-Xmx384m -Dcom.kineticdata.bridgehub.dataDirectory=/home/dataDirectory -Dcom.kineticdata.bridgehub.clustering.contactpoints=cassandra -Dcom.kineticdata.bridgehub.clustering.keyspace=kinetic_bridgehub"
      healthcheck:
        test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:8080/kinetic-bridgehub/app/login || exit 1"]
        interval: 90s
        timeout: 10s
        retries: 3
      volumes:
        - ./app-data/kinetic-bridgehub/data:/home/dataDirectory

    filehub:
      build:
        context: './app-config/'
        dockerfile: './kinetic-filehub/Dockerfile'
        args:
          IMAGE_VERSION: "8.5-jre8-alpine"
          VERSION: "1.2.0"
      command: '/wait-for-port-to-close.sh configuration 8181 catalina.sh run'
      depends_on:
        - cassandra
      environment:
        JAVA_OPTS: "-Xmx256m -Dcom.kineticdata.filehub.dataDirectory=/home/dataDirectory -Dcom.kineticdata.filehub.clustering.contactpoints=cassandra -Dcom.kineticdata.filehub.clustering.keyspace=kinetic_filehub"
      healthcheck:
        test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:8080/kinetic-filehub/app/login || exit 1"]
        interval: 90s
        timeout: 10s
        retries: 3
      volumes:
        - ./app-data/kinetic-filehub/data:/home/dataDirectory
        - ./app-data/kinetic-filehub/files:/home/filesDirectory
